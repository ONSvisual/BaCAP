var S=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function L(t){var i=t.default;if(typeof i=="function"){var r=function(){return i.apply(this,arguments)};r.prototype=i.prototype}else r={};return Object.defineProperty(r,"__esModule",{value:!0}),Object.keys(t).forEach(function(e){var f=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(r,e,f.get?f:{enumerable:!0,get:function(){return t[e]}})}),r}function G(t,i,r){if(t!==null)for(var e,f,o,u,y,n,a,c=0,l=0,p,g=t.type,b=g==="FeatureCollection",v=g==="Feature",m=b?t.features.length:1,P=0;P<m;P++){a=b?t.features[P].geometry:v?t.geometry:t,p=a?a.type==="GeometryCollection":!1,y=p?a.geometries.length:1;for(var M=0;M<y;M++){var s=0,w=0;if(u=p?a.geometries[M]:a,u!==null){n=u.coordinates;var h=u.type;switch(c=r&&(h==="Polygon"||h==="MultiPolygon")?1:0,h){case null:break;case"Point":if(i(n,l,P,s,w)===!1)return!1;l++,s++;break;case"LineString":case"MultiPoint":for(e=0;e<n.length;e++){if(i(n[e],l,P,s,w)===!1)return!1;l++,h==="MultiPoint"&&s++}h==="LineString"&&s++;break;case"Polygon":case"MultiLineString":for(e=0;e<n.length;e++){for(f=0;f<n[e].length-c;f++){if(i(n[e][f],l,P,s,w)===!1)return!1;l++}h==="MultiLineString"&&s++,h==="Polygon"&&w++}h==="Polygon"&&s++;break;case"MultiPolygon":for(e=0;e<n.length;e++){for(w=0,f=0;f<n[e].length;f++){for(o=0;o<n[e][f].length-c;o++){if(i(n[e][f][o],l,P,s,w)===!1)return!1;l++}w++}s++}break;case"GeometryCollection":for(e=0;e<u.geometries.length;e++)if(G(u.geometries[e],i,r)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function k(t,i){var r,e,f,o,u,y,n,a,c,l,p=0,g=t.type==="FeatureCollection",b=t.type==="Feature",v=g?t.features.length:1;for(r=0;r<v;r++){for(y=g?t.features[r].geometry:b?t.geometry:t,a=g?t.features[r].properties:b?t.properties:{},c=g?t.features[r].bbox:b?t.bbox:void 0,l=g?t.features[r].id:b?t.id:void 0,n=y?y.type==="GeometryCollection":!1,u=n?y.geometries.length:1,f=0;f<u;f++){if(o=n?y.geometries[f]:y,o===null){if(i(null,p,a,c,l)===!1)return!1;continue}switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(i(o,p,a,c,l)===!1)return!1;break}case"GeometryCollection":{for(e=0;e<o.geometries.length;e++)if(i(o.geometries[e],p,a,c,l)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}p++}}function C(t){var i=[1/0,1/0,-1/0,-1/0];return G(t,function(r){i[0]>r[0]&&(i[0]=r[0]),i[1]>r[1]&&(i[1]=r[1]),i[2]<r[0]&&(i[2]=r[0]),i[3]<r[1]&&(i[3]=r[1])}),i}C.default=C;export{L as a,C as b,S as c,k as g};
